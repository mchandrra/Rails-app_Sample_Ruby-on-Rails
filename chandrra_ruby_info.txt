Ruby on Rails is a web framework that makes it easy to build powerful web apps in a short amount of time.

Ruby on Rails is written in the Ruby programming language.

$ rails new chandrra
$ bundle install
$ rails server

View the Rails app in the browser by visiting http://localhost:8000.

The rails new command created a new Rails app named chandrra. It generated a number of files and folders that we will use to build the app.
The bundle install command installed all the software packages needed by the new Rails app. These software packages are called gems and they are listed in the file Gemfile.
The rails server command started the Rails development server so that we could preview the app in the browser by visiting http://localhost:8000. This development server is called WEBrick.

What happens when you visit http://localhost:8000 in the browser? 
The browser makes a request for the URL http://localhost:8000.
The request hits the Rails router in config/routes.rb. The router recognizes the URL and sends the request to the controller.
The controller receives the request and processes it.
The controller passes the request to the view.
The view renders the page as HTML.
The controller sends the HTML back to the browser for you to see.
This is called the request/response cycle. It's a useful way to see how a Rails app's files and folders fit together.

--------
Looking at the request/response cycle, we need three parts to build a Rails app: a controller, a route, and a view. Let's start here by creating a controller.

rails generate controller Pages


After rails generate finishes running, in the Code Editor, open app/controllers/pages_controller.rb. Within the class PagesController, add a method home

class PagesController < ApplicationController 

  def home
  end

end

------

The rails generate controller Pages command generated a new controller named Pages. This created a file named app/controllers/pages_controller.rb.
Inside the new Pages controller, we added a method called home. Methods in Rails controllers are also referred to as controller actions, so here we added the home action to the Pages controller.


Now that we have a controller, let's move on to the second part of the request/response cycle and create a route.

Open config/routes.rb and underneath line 1, type:

get 'welcome' => 'pages#home'

--------

Well done! Now when a user visits http://localhost:8000/welcome, the route

get 'welcome' => 'pages#home'

will tell Rails to send this request to the Pages controller's home action.

Now that we have a controller and a route, let's move on to the third part of the request/response cycle and create a view.

Open app/views/pages/home.html.erb, and type in the following HTML. Fill in your own name.

<div class="main">
  <div class="container">
    <h1>Hello my name is __</h1>
    <p>I make Rails apps.</p>
  </div>
</div>

CSS in the file app/assets/stylesheets/pages.css.scss.

View your app by visiting http://localhost:8000/welcome in the browser.






